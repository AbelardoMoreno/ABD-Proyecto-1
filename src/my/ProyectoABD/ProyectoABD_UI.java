/* Abelardo Moreno 18002106
   Karl Correa 18110561 
*/
package my.ProyectoABD;

import java.sql.DriverManager;
import java.sql.Connection;
import java.lang.ClassNotFoundException;
import java.sql.*;
import javax.swing.*;
import javax.swing.JFrame;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.JTable;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.TableModel;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.RowSorter;
/**
 *
 * @author Abelardo
 */
public class ProyectoABD_UI extends javax.swing.JFrame {

    /**
     * Creates new form ProyectoABD_UI
     */
    public ProyectoABD_UI() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("1");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("10");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("11");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel1.setText("Pregunta");

        jLabel2.setText("Consulta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(jButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton5)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton7)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton11))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton7)
                    .addComponent(jButton9)
                    .addComponent(jButton5)
                    .addComponent(jButton11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton8)
                    .addComponent(jButton10))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 17, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(13, 13, 13)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
       
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        
        /***Creacion de la Tabla***/
        DefaultTableModel modelo;    
        modelo= new DefaultTableModel();
        modelo.addColumn("Tablas");
        modelo.addColumn("Indices");
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
        
        
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 1---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "1. Nombre de las tablas e índices de la base de datos.");
        
        jTextArea2.setText(null);
        jTextArea2.append("select table_name as Tablas, index_name as Indices from user_indexes");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select table_name as Tablas, index_name as Indices from user_indexes");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),rset.getString(2)});                    
        }
      
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }

        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Cantidad de Tablas");
        modelo.addColumn("Tablas");
        modelo.addColumn("Cantidad de Indices");
        
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
        
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 2---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "2. Cantidad de tablas y dar la cantidad de índices por cada tabla.");
        jTextArea2.setText(null);
        jTextArea2.append("select table_name as Tablas, count(index_name) as Indices from user_indexes group by table_name;\nselect distinct count (OBJECT_NAME) as Cantidad_Tablas FROM user_objects where OBJECT_TYPE = 'TABLE';");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select table_name as Tablas, count(index_name) as Indices from user_indexes group by table_name order by table_name");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{"",rset.getString(1),rset.getString(2)});                    
        }
        
        rset = stmt.executeQuery("SELECT DISTINCT count (OBJECT_NAME) as Cantidad_Tablas FROM USER_OBJECTS WHERE OBJECT_TYPE = 'TABLE'");
         while (rset.next()){
                    
               modelo.setValueAt(rset.getString(1), 0, 0);                
        }
        
         
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Restriccion");
        modelo.addColumn("Tipo");
        modelo.addColumn("Tabla");
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 3---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "3. Indicar las restricciones en el esquema, a que tabla pertenece y su tipo.");
        jTextArea2.setText(null);
        jTextArea2.append("select constraint_name, constraint_type, table_name from user_constraints order by table_name;");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select constraint_name, constraint_type, table_name from user_constraints order by table_name");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),rset.getString(2),rset.getString(3)});                    
        }
      
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }          
    }//GEN-LAST:event_jButton3ActionPerformed
 
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Tablas");
        modelo.addColumn("Tamaño de cada registro en bytes");     
        
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 8---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "8. El tamaño de cada registro(en bytes).");
        jTextArea2.setText(null);
        jTextArea2.append("select max(vsize(cod_horario)), max(vsize(cod_serie)), max(vsize(cod_serie_sustituta)) from transmite;");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select table_name from user_tables order by table_name");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),});                    
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_horario)), max(vsize(cod_serie)), max(vsize(cod_serie_sustituta)) from transmite");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3)), 11, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_artista)), max(vsize(nombre_real)), max(vsize(estado_civil)), max(vsize(nombre_artistico)) from artista");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4)), 0, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_cadena)), max(vsize(nombre_cadena)), max(vsize(direccion_cadena)), max(vsize(presidente)) from cadena");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4)), 1, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_horario)), max(vsize(hora_comienzo)), max(vsize(hora_fin)), max(vsize(tipo_horario)) from horario");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4)), 2, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_serie)), max(vsize(cod_personaje)), max(vsize(cod_artista)), max(vsize(fecha_interpretacion)),max(vsize(critica)),max(vsize(aparicion)),max(vsize(cant_episodios)) from interpreta");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5))+Integer.parseInt(rset.getString(6))+Integer.parseInt(rset.getString(7)), 3, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(numero_semana)), max(vsize(mes)), max(vsize(anio)), max(vsize(cod_pelicula)) from involucrada");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4)), 4, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_cadena)), max(vsize(cod_serie)), max(vsize(fecha_lanzamiento)), max(vsize(critica)),max(vsize(fecha_cancelacion)) from lanzar");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5)), 5, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_pelicula)), max(vsize(cod_artista)), max(vsize(principal)), max(vsize(critica)),max(vsize(merece_premio)) from participa");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5)), 6, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_pelicula)), max(vsize(nombre_promocion)), max(vsize(resena)), max(vsize(cant_actores)),max(vsize(monto)) from pelicula");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5)), 7, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_personaje)), max(vsize(nombre_personaje)), max(vsize(tipo_personaje)) from personaje");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3)), 8, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(numero_semana)), max(vsize(mes)), max(vsize(anio)), max(vsize(exito)),max(vsize(tematica)) from semana");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5)), 9, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_serie)), max(vsize(nombre_serie)), max(vsize(tipo_serie)), max(vsize(cant_actores)),max(vsize(desc_serie)),max(vsize(raiting)) from serie");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5))+Integer.parseInt(rset.getString(6)), 10, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_serie)), max(vsize(cod_cadena_vendedora)), max(vsize(cod_cadena_compradora)), max(vsize(fecha_venta)),max(vsize(cambios)) from venta");
        
        while(rset.next()){
            modelo.setValueAt(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5)), 12, 1);
        }
        
        
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }         
    }//GEN-LAST:event_jButton8ActionPerformed


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Tablespace");
        modelo.addColumn("Espacio Libre (bytes)");
        modelo.addColumn("Espacio Libre (bloques)");
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 4---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "4. Espacio disponible en los tablespace creados en el repositorio.");
        jTextArea2.setText(null);
        jTextArea2.append("select tablespace_name, bytes, blocks from user_free_space;");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select tablespace_name, bytes, blocks from user_free_space");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),rset.getString(2),rset.getString(3)});                    
        }
      
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }             
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Indice");
        modelo.addColumn("Columna");
        modelo.addColumn("Unicidad");
        modelo.addColumn("Tablespace");
        modelo.addColumn("Max Extents");
        modelo.addColumn("PCT Free");
        modelo.addColumn("Initial Extents");
        
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 5---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "5. De los índices que se encuentran creados en el repositorio, liste la(s) columnas que conforman el índice, su unicidad, el tablespace donde se encuentra almacenado y 3 parámetros de almacenamiento (clausula storage) que usted escoja.");
        jTextArea2.setText(null);
        jTextArea2.append("select ui.index_name, uic.column_name, ui.uniqueness, ui.tablespace_name, ui.max_extents, ui.pct_free, ui.initial_extent from user_indexes ui, user_ind_columns uic where ui.index_name = uic.index_name order by ui.index_name;");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select ui.index_name, uic.column_name, ui.uniqueness, ui.tablespace_name, ui.max_extents, ui.pct_free, ui.initial_extent from user_indexes ui, user_ind_columns uic where ui.index_name = uic.index_name order by ui.index_name");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),rset.getString(2),rset.getString(3),rset.getString(4),rset.getString(5),rset.getString(6),rset.getString(7)});                    
        }
      
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Trigger");
        modelo.addColumn("Tipo");
        modelo.addColumn("Status");
        modelo.addColumn("Tabla que lo activa");
      
        
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 6---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "6. Por cada trigger en el esquema, debe indicar su nombre, tipo, status y tabla que lo activa");
        jTextArea2.setText(null);
        jTextArea2.append("select trigger_name, trigger_type, status, table_name from user_triggers;");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select trigger_name, trigger_type, status, table_name from user_triggers");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),rset.getString(2),rset.getString(3),rset.getString(4)});                    
        }
      
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }             
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Tablas");
        modelo.addColumn("Tamaño en bloques");     
        
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 7---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "7. El tamaño de las tablas (en bloques).");
        jTextArea2.setText(null);
        jTextArea2.append("select table_name, bytes/8192 as tableBlockSize from user_tables ut, user_segments us where table_name = segment_name;");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select table_name, bytes/8192 as tableBlockSize from user_tables ut, user_segments us where table_name = segment_name");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),rset.getString(2)});                    
        }
      
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }       
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Columna");
        modelo.addColumn("Tamaño en bytes");     
        
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 9---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "9. El tamaño de cada columna (en bytes).");
        jTextArea2.setText(null);
        jTextArea2.append("select column_name, data_length from user_tab_columns order by column_name;");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select column_name, data_length from user_tab_columns order by column_name");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),rset.getString(2)});                    
        }
      
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }           
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Tablas");
        modelo.addColumn("Factor de bloqueo");     
        
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 10---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "10. El Factor de bloqueo de las tablas e índices");
        jTextArea2.setText(null);
        jTextArea2.append("select max(vsize(cod_serie)), max(vsize(cod_personaje)), max(vsize(cod_artista)), max(vsize(fecha_interpretacion)),max(vsize(critica)),max(vsize(aparicion)),max(vsize(cant_episodios)) from interpreta");

      Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select table_name from user_tables order by table_name");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),});                    
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_horario)), max(vsize(cod_serie)), max(vsize(cod_serie_sustituta)) from transmite");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))), 11, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_artista)), max(vsize(nombre_real)), max(vsize(estado_civil)), max(vsize(nombre_artistico)) from artista");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))), 0, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_cadena)), max(vsize(nombre_cadena)), max(vsize(direccion_cadena)), max(vsize(presidente)) from cadena");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))), 1, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_horario)), max(vsize(hora_comienzo)), max(vsize(hora_fin)), max(vsize(tipo_horario)) from horario");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))), 2, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_serie)), max(vsize(cod_personaje)), max(vsize(cod_artista)), max(vsize(fecha_interpretacion)),max(vsize(critica)),max(vsize(aparicion)),max(vsize(cant_episodios)) from interpreta");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5))+Integer.parseInt(rset.getString(6))+Integer.parseInt(rset.getString(7))), 3, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(numero_semana)), max(vsize(mes)), max(vsize(anio)), max(vsize(cod_pelicula)) from involucrada");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))), 4, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_cadena)), max(vsize(cod_serie)), max(vsize(fecha_lanzamiento)), max(vsize(critica)),max(vsize(fecha_cancelacion)) from lanzar");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5))), 5, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_pelicula)), max(vsize(cod_artista)), max(vsize(principal)), max(vsize(critica)),max(vsize(merece_premio)) from participa");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5))), 6, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_pelicula)), max(vsize(nombre_promocion)), max(vsize(resena)), max(vsize(cant_actores)),max(vsize(monto)) from pelicula");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5))), 7, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_personaje)), max(vsize(nombre_personaje)), max(vsize(tipo_personaje)) from personaje");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))), 8, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(numero_semana)), max(vsize(mes)), max(vsize(anio)), max(vsize(exito)),max(vsize(tematica)) from semana");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5))), 9, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_serie)), max(vsize(nombre_serie)), max(vsize(tipo_serie)), max(vsize(cant_actores)),max(vsize(desc_serie)),max(vsize(raiting)) from serie");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5))+Integer.parseInt(rset.getString(6))), 10, 1);
        }
        
        rset = stmt.executeQuery("select max(vsize(cod_serie)), max(vsize(cod_cadena_vendedora)), max(vsize(cod_cadena_compradora)), max(vsize(fecha_venta)),max(vsize(cambios)) from venta");
        
        while(rset.next()){
            modelo.setValueAt(8192/(Integer.parseInt(rset.getString(1))+Integer.parseInt(rset.getString(2))+Integer.parseInt(rset.getString(3))+Integer.parseInt(rset.getString(4))+Integer.parseInt(rset.getString(5))), 12, 1);
        }
      
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        int cont,total;
        
        try {

        /**** Cargamos el driver ****/
        Class.forName("oracle.jdbc.driver.OracleDriver");

        /**** Realizamos la conexión ****/
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe", "repositorio", "hunter2" );  /**Colocar tu usuario**/

        /***Creacion de la Tabla***/
        DefaultTableModel modelo;
        modelo= new DefaultTableModel();
        modelo.addColumn("Tablas");
        modelo.addColumn("Factor de bloqueo");     
        
        
        this.jTable1.setModel(modelo);
        
        JTable table = new JTable(modelo);
       
        table.setPreferredScrollableViewportSize(new Dimension(500, 150));
        
        modelo = (DefaultTableModel) table.getModel();
      
        /*----------------------------------------------------------------------------------*/
        /*---------------------------Consulta 11---------------------------------------------*/
        /*----------------------------------------------------------------------------------*/
        jTextArea1.setText(null);
        jTextArea1.append( "11. Dada una consulta de igualdad sobre un campo en una tabla, indicar si se usan índices y calcular el costo en función de números de accesos a disco y en tiempo.");
        jTextArea2.setText(null);
        jTextArea2.append("TO DO");

        Statement stmt = con.createStatement();
        ResultSet rset = stmt.executeQuery("select * from serie");
         
        while (rset.next()){
                    
            modelo.addRow(new Object[]{rset.getString(1),rset.getString(2)});                    
        }
      
        stmt.close();
       
        /**** Una buena costumbre: cerramos la conexión ****/
        con.close();
        }
        /**** Excepción que se dispara si falla la carga del driver ****/
        catch( ClassNotFoundException e ) { e.printStackTrace();  }

        /**** Excepción que se dispara si falla la conexión *****/
        catch ( SQLException e) { e.printStackTrace();  }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProyectoABD_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProyectoABD_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProyectoABD_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProyectoABD_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
